<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzkj.platform.operator.mapper.BlackRelatedMapper">
    
    <resultMap type="BlackRelated" id="BlackRelatedResult">
        <result property="id"    column="id"    />
        <result property="groupId"    column="group_id"    />
        <result property="channel"    column="channel"    />
        <result property="riskHigh"    column="risk_high"    />
        <result property="riskMedium"    column="risk_medium"    />
        <result property="riskLow"    column="risk_low"    />
        <result property="riskPrivate"    column="risk_private"    />
        <result property="priority"    column="priority"    />
        <result property="filterRate"    column="filter_rate"    />
        <result property="remark"    column="remark"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectBlackRelatedVo">
        select id, group_id, channel, risk_high, risk_medium, risk_low, risk_private, priority, filter_rate, remark, update_time, create_time from e_black_related
    </sql>

    <select id="selectBlackRelatedList" parameterType="BlackRelated" resultMap="BlackRelatedResult">
        <include refid="selectBlackRelatedVo"/>
        <where>  
            <if test="groupId != null "> and group_id = #{groupId}</if>
            <if test="channel != null  and channel != ''"> and channel = #{channel}</if>
            <if test="riskHigh != null "> and risk_high = #{riskHigh}</if>
            <if test="riskMedium != null "> and risk_medium = #{riskMedium}</if>
            <if test="riskLow != null "> and risk_low = #{riskLow}</if>
            <if test="riskPrivate != null "> and risk_private = #{riskPrivate}</if>
            <if test="priority != null "> and priority = #{priority}</if>
            <if test="filterRate != null "> and filter_rate = #{filterRate}</if>
        </where>
    </select>
    
    <select id="selectBlackRelatedById" parameterType="Long" resultMap="BlackRelatedResult">
        <include refid="selectBlackRelatedVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBlackRelated" parameterType="BlackRelated" useGeneratedKeys="true" keyProperty="id">
        insert into e_black_related
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="groupId != null">group_id,</if>
            <if test="channel != null">channel,</if>
            <if test="riskHigh != null">risk_high,</if>
            <if test="riskMedium != null">risk_medium,</if>
            <if test="riskLow != null">risk_low,</if>
            <if test="riskPrivate != null">risk_private,</if>
            <if test="priority != null">priority,</if>
            <if test="filterRate != null">filter_rate,</if>
            <if test="remark != null">remark,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="groupId != null">#{groupId},</if>
            <if test="channel != null">#{channel},</if>
            <if test="riskHigh != null">#{riskHigh},</if>
            <if test="riskMedium != null">#{riskMedium},</if>
            <if test="riskLow != null">#{riskLow},</if>
            <if test="riskPrivate != null">#{riskPrivate},</if>
            <if test="priority != null">#{priority},</if>
            <if test="filterRate != null">#{filterRate},</if>
            <if test="remark != null">#{remark},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>
    <insert id="insertBlackRelateds" parameterType="java.util.List">
        insert into e_black_related(group_id,channel,risk_high,risk_medium,risk_low,risk_private,priority,filter_rate,remark,update_time,create_time)
        values
        <foreach collection="list" separator="," item="item">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.groupId},#{item.channel},#{item.riskHigh},#{item.riskMedium},#{item.riskLow},#{item.riskPrivate},
                #{item.priority},#{item.filterRate},#{item.remark},#{item.updateTime},#{item.createTime}
            </trim>
        </foreach>

    </insert>
    <update id="updateBlackRelated" parameterType="BlackRelated">
        update e_black_related
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="channel != null">channel = #{channel},</if>
            <if test="riskHigh != null">risk_high = #{riskHigh},</if>
            <if test="riskMedium != null">risk_medium = #{riskMedium},</if>
            <if test="riskLow != null">risk_low = #{riskLow},</if>
            <if test="riskPrivate != null">risk_private = #{riskPrivate},</if>
            <if test="priority != null">priority = #{priority},</if>
            <if test="filterRate != null">filter_rate = #{filterRate},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBlackRelatedById" parameterType="Long">
        delete from e_black_related where id = #{id}
    </delete>

    <delete id="deleteBlackRelatedByGroupId" parameterType="Long">
        delete from e_black_related where group_id = #{groupId}
    </delete>

    <delete id="deleteBlackRelatedByGroupIds" parameterType="String">
        delete from e_black_related where group_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteBlackRelatedByIds" parameterType="String">
        delete from e_black_related where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>